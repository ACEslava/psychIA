{"version":3,"sources":["instructions.mp4","App.js","reportWebVitals.js","index.js"],"names":["curPage","pageDisplay","pageChange","Event","timelist","time","trials","practiceMode","StartScreen","React","useState","setShow","window","addEventListener","e","style","width","height","top","left","Button","position","color","variant","onClick","dispatchEvent","timelistIndex","Math","floor","random","length","splice","LearnTrigram","setTimeout","backgroundColor","zIndex","Typography","align","margin","WaitPeriod","RecallScreen","ResultsScreen","RestScreen","show","seconds","setSeconds","useEffect","console","log","Instructions","className","url","instructionsVideo","playing","volume","controls","StartCountdown","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.332de099.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/instructions.2eb79839.mp4\";","import './App.css';\nimport { Button, Typography } from \"@material-ui/core\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport instructionsVideo from './instructions.mp4';\nvar curPage = 0\nvar pageDisplay = [true, false, false, false, false, false, false, false];\nconst pageChange = new Event(\"newpage\");\nvar timelist = [6000, 12000]\nvar time = 0\nvar trials = 0\nvar practiceMode = false\n\nfunction StartScreen() {\n  const [show, setShow] = React.useState(true)\n  \n  function clickHandle() {\n    trials = 0\n    curPage = 7\n    pageDisplay[0] = false\n    pageDisplay[7] = true\n    setShow(false)\n    window.dispatchEvent(pageChange)\n    \n    var timelistIndex = Math.floor(Math.random()*timelist.length)\n    time = timelist[timelistIndex]\n    timelist.splice(timelistIndex, 1)\n    trials ++ \n  }\n\n  function clickHandlePractice() {\n    trials=  0\n    practiceMode = true\n    curPage = 7\n    pageDisplay[0] = false\n    pageDisplay[7] = true\n    setShow(false)\n    window.dispatchEvent(pageChange)\n    \n    timelist = [5000, 8000]\n    var timelistIndex = Math.floor(Math.random()*timelist.length)\n    time = timelist[timelistIndex]\n    timelist.splice(timelistIndex, 1)\n    trials ++ \n  }\n\n  function clickHandleVideo() {\n    pageDisplay[0] = false\n    pageDisplay[6] = true\n    curPage = 6\n    setShow(false)\n    window.dispatchEvent(pageChange)\n  }\n\n  function thisPage() {\n    if (curPage == 0) {\n      setShow(true)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>\n      {pageDisplay[0] ? \n        <div\n          style={{width: \"100vw\", \n          height: \"100vh\",\n          top: \"0px\",\n          left: \"0px\"}}>\n            <Button style={{\n              position: \"relative\", \n              top: \"45%\",\n              left: \"40%\"}} \n              color=\"primary\" \n              variant=\"contained\"\n              onClick={clickHandleVideo}>Instructions</Button>\n            <Button style={{\n              position: \"relative\", \n              top: \"45%\",\n              left: \"45%\"}} \n              color=\"primary\" \n              variant=\"contained\"\n              onClick={clickHandlePractice}>Practice</Button>\n            <Button style={{\n              position: \"relative\", \n              top: \"45%\",\n              left: \"50%\"}} \n              color=\"primary\" \n              variant=\"contained\"\n              onClick={clickHandle}>Start</Button></div> : null}\n    </div>\n  )\n}\n\nfunction LearnTrigram() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 1) {\n      setShow(true)\n      setTimeout(() => {\n        pageDisplay[1] = false\n        pageDisplay[2] = true\n        curPage = 2\n        window.dispatchEvent(pageChange)\n        setShow(false)\n      }, 4000)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>{pageDisplay[1] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#00CC66\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <Typography align=\"center\" variant=\"h1\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"45%\"}}>ABC 200</Typography>\n    </div> : null}</div>\n  )\n\n}\n\nfunction WaitPeriod() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 2) {\n      setShow(true)\n      setTimeout(() => {\n        pageDisplay[2] = false\n        pageDisplay[3] = true\n        curPage = 3\n        window.dispatchEvent(pageChange)\n        setShow(false)\n      }, time)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>{pageDisplay[2] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#00CC66\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n    </div> : null}</div>\n  )\n}\n\nfunction RecallScreen() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 3) {\n      setShow(true)\n      setTimeout(() => {\n        pageDisplay[3] = false\n        pageDisplay[4] = true\n        curPage = 4\n        window.dispatchEvent(pageChange)\n        setShow(false)\n      }, 6000)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>{pageDisplay[3] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#FF595E\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <Typography align=\"center\" variant=\"h1\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"45%\"}}>Stop</Typography>\n        <Typography align=\"center\" variant=\"h2\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"55%\"}}>Recall the Trigram to the best of your ability</Typography>\n    </div> : null}</div>\n  )\n}\n\nfunction ResultsScreen() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 4) {\n      setShow(true)\n      setTimeout(() => {\n        pageDisplay[4] = false\n        pageDisplay[5] = true\n        curPage = 5\n        window.dispatchEvent(pageChange)\n        setShow(false)\n      }, 6000)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>{pageDisplay[4] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#FF595E\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <Typography align=\"center\" variant=\"h2\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"45%\"}}>{`[${time/1000}]`}</Typography>\n        <Typography align=\"center\" variant=\"h2\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"55%\"}}>{practiceMode? `Practice Trial ${trials} of 2`:` Trial ${trials} of 5`}</Typography>\n    </div> : null}</div>\n  )\n}\n\nfunction RestScreen() {\n  const [show, setShow] = React.useState(false)\n  const [seconds, setSeconds] = React.useState(15)\n\n  useEffect(() => {\n    if (show == true){\n      if (seconds > 0) {\n        setTimeout(() => {setSeconds(seconds - 1)}, 1000)\n        console.log(seconds)\n      } else {\n        setSeconds(15)\n        setShow(false)\n\n        if (timelist.length == 0) {\n          timelist = [0, 6000, 12000]\n          pageDisplay[5] = false\n          pageDisplay[0] = true\n          curPage = 0\n          window.dispatchEvent(pageChange)\n        } else {\n          var timelistIndex = Math.floor(Math.random()*timelist.length)\n          time = timelist[timelistIndex]\n          timelist.splice(timelistIndex, 1)\n          trials ++\n\n          pageDisplay[5] = false\n          pageDisplay[1] = true\n          curPage = 1\n          window.dispatchEvent(pageChange)\n        }\n      }\n    }\n  })\n\n  window.addEventListener('newpage', function (e) {curPage === 5 ? setShow(true): setShow(false)}, false);\n\n  return (\n    <div>{pageDisplay[5] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#FF595E\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <Typography align=\"center\" variant=\"h2\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"45%\"}}>{`[${time/1000}]`}</Typography>\n        <Typography align=\"center\" variant=\"h2\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"55%\"}}>{trials == 2? \"Session complete\" : `${seconds} seconds until Trial ${trials+1}`}</Typography>\n        {practiceMode? trials == 2?\n          <Typography align=\"center\" variant=\"h3\" style={{\n            margin: \"auto\",\n            color: \"white\",\n            position: \"relative\",\n            top: \"65%\"}}>Please wait</Typography>: null :\n        trials == 2?\n          <Typography align=\"center\" variant=\"h3\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"65%\"}}>Your proctor will now debrief you</Typography>: null}\n    </div> : null}</div>\n  )\n}\n\nfunction Instructions() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 6) {\n      setShow(true)\n      setTimeout(() => {\n        pageDisplay[6] = false\n        pageDisplay[0] = true\n        curPage = 0\n        window.dispatchEvent(pageChange)\n        setShow(false)\n      }, 74000)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>{\n      pageDisplay[6] ? <div>\n        <ReactPlayer\n            className='react-player fixed-bottom'\n            url={instructionsVideo}\n            width='100%'\n            height='100%'\n            playing= {true}\n            volume= {1}\n            controls = {false}\n            />\n      </div> : \n      null}</div>\n  )\n}\n\nfunction StartCountdown() {\n  const [show, setShow] = React.useState(false)\n  const [seconds, setSeconds] = React.useState(15)\n\n  useEffect(() => {\n    if (show == true){\n      if (seconds > 0) {\n        setTimeout(() => {setSeconds(seconds - 1)}, 1000)\n        console.log(seconds)\n      } else {\n        setSeconds(15)\n        setShow(false)\n        pageDisplay[7] = false\n        pageDisplay[1] = true\n        curPage = 1\n        window.dispatchEvent(pageChange)\n      }\n    }\n  })\n\n  window.addEventListener('newpage', function (e) {curPage === 7 ? setShow(true): setShow(false)}, false);\n\n  return (\n    <div>{pageDisplay[7] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#00CC66\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <Typography align=\"center\" variant=\"h1\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"45%\"}}>{`${seconds} seconds until Trial ${trials}`}</Typography>\n    </div> : null}</div>\n  )\n}\n\nfunction App() {\n  return (\n    <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#303030\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <StartScreen/>\n        <LearnTrigram/>\n        <WaitPeriod/>\n        <RecallScreen/>\n        <ResultsScreen/>\n        <RestScreen/>\n        <Instructions/>\n        <StartCountdown/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}