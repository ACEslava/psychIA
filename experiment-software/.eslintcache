[{"D:\\Documents\\Programming\\Psych IA\\experiment-software\\src\\App.js":"1","D:\\Documents\\Programming\\Psych IA\\experiment-software\\src\\index.js":"2","D:\\Documents\\Programming\\Psych IA\\experiment-software\\src\\reportWebVitals.js":"3"},{"size":5291,"mtime":1612383879520,"results":"4","hashOfConfig":"5"},{"size":455,"mtime":1612374507455,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609741728114,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"4norin",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Programming\\Psych IA\\experiment-software\\src\\App.js",["15","16","17","18","19","20","21","22","23","24","25"],"import './App.css';\nimport { Button, Typography } from \"@material-ui/core\"\nimport React from 'react';\n\nvar curPage = 0\nvar pageDisplay = [true, false, false, false, false];\nconst pageChange = new CustomEvent(\"newpage\", {detail: curPage});\nvar timelist = []\nvar time = 0\nvar trials = 0\n\nfunction StartScreen() {\n  const [show, setShow] = React.useState(true)\n  \n  function clickHandle() {\n    curPage = 1\n    pageDisplay[0] = false\n    pageDisplay[1] = true\n    setShow(false)\n    window.dispatchEvent(pageChange)\n    \n    if (timelist.length == 0) {\n      timelist = [0, 3000, 6000, 9000, 12000]\n    }\n\n    var timelistIndex = Math.floor(Math.random()*timelist.length)\n    time = timelist[timelistIndex]\n    timelist.splice(timelistIndex, 1)\n    trials ++ \n  }\n\n  function thisPage() {\n    if (curPage == 0) {\n      setShow(true)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>\n      {pageDisplay[0] ? \n        <Button style={{\n          position: \"fixed\", \n          top: \"50%\", \n          left: \"50%\" }} \n          color=\"primary\" \n          variant=\"contained\"\n          onClick={clickHandle}>Start</Button> : null}\n    </div>\n  )\n}\n\nfunction LearnTrigram() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 1) {\n      setShow(true)\n      setTimeout(() => {\n        pageDisplay[1] = false\n        pageDisplay[2] = true\n        curPage = 2\n        window.dispatchEvent(pageChange)\n        setShow(false)\n      }, 3000)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>{pageDisplay[1] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#00CC66\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <Typography align=\"center\" variant=\"h1\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"45%\"}}>XDF 202</Typography>\n    </div> : null}</div>\n  )\n\n}\n\nfunction WaitPeriod() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 2) {\n      setShow(true)\n      setTimeout(() => {\n        pageDisplay[2] = false\n        pageDisplay[3] = true\n        curPage = 3\n        window.dispatchEvent(pageChange)\n        setShow(false)\n      }, time)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>{pageDisplay[2] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#00CC66\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n    </div> : null}</div>\n  )\n}\n\nfunction RecallScreen() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 3) {\n      setShow(true)\n      setTimeout(() => {\n        pageDisplay[3] = false\n        pageDisplay[4] = true\n        curPage = 4\n        window.dispatchEvent(pageChange)\n        setShow(false)\n      }, 5000)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n\n  return (\n    <div>{pageDisplay[3] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#FF595E\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <Typography align=\"center\" variant=\"h1\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"45%\"}}>Stop</Typography>\n        <Typography align=\"center\" variant=\"h2\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"55%\"}}>Recall the Trigram to the best of your ability</Typography>\n    </div> : null}</div>\n  )\n}\n\nfunction ResultsScreen() {\n  const [show, setShow] = React.useState(false)\n  \n  function thisPage() {\n    if (curPage == 4) {\n      setShow(true)\n    }\n  }\n\n  function nextPage(event) {\n    if (event.isComposing || event.keyCode === 32) {\n      pageDisplay[4] = false\n      pageDisplay[0] = true\n      curPage = 0\n      window.dispatchEvent(pageChange)\n      setShow(false)\n    }\n  }\n\n  window.addEventListener('newpage', function (e) {thisPage()}, false);\n  window.addEventListener('keydown', nextPage, false);\n\n  return (\n    <div>{pageDisplay[4] ? <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#FF595E\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <Typography align=\"center\" variant=\"h2\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"45%\"}}>{`[${time/1000}]`}</Typography>\n        <Typography align=\"center\" variant=\"h2\" style={{\n          margin: \"auto\",\n          color: \"white\",\n          position: \"relative\",\n          top: \"55%\"}}>{` Trial ${trials} of 5`}</Typography>\n    </div> : null}</div>\n  )\n}\n\nfunction App() {\n  return (\n    <div style={{\n      width: \"100vw\", \n      height: \"100vh\",\n      backgroundColor: \"#303030\",\n      position: \"fixed\",\n      zIndex: 100,\n      top: \"0px\",\n      left: \"0px\"}}>\n        <StartScreen/>\n        <LearnTrigram/>\n        <WaitPeriod/>\n        <RecallScreen/>\n        <ResultsScreen/>\n    </div>\n  );\n}\n\nexport default App;","D:\\Documents\\Programming\\Psych IA\\experiment-software\\src\\index.js",[],"D:\\Documents\\Programming\\Psych IA\\experiment-software\\src\\reportWebVitals.js",[],{"ruleId":"26","severity":1,"message":"27","line":13,"column":10,"nodeType":"28","messageId":"29","endLine":13,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":22,"column":25,"nodeType":"32","messageId":"33","endLine":22,"endColumn":27},{"ruleId":"30","severity":1,"message":"31","line":33,"column":17,"nodeType":"32","messageId":"33","endLine":33,"endColumn":19},{"ruleId":"26","severity":1,"message":"27","line":55,"column":10,"nodeType":"28","messageId":"29","endLine":55,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":58,"column":17,"nodeType":"32","messageId":"33","endLine":58,"endColumn":19},{"ruleId":"26","severity":1,"message":"27","line":92,"column":10,"nodeType":"28","messageId":"29","endLine":92,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":95,"column":17,"nodeType":"32","messageId":"33","endLine":95,"endColumn":19},{"ruleId":"26","severity":1,"message":"27","line":123,"column":10,"nodeType":"28","messageId":"29","endLine":123,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":126,"column":17,"nodeType":"32","messageId":"33","endLine":126,"endColumn":19},{"ruleId":"26","severity":1,"message":"27","line":164,"column":10,"nodeType":"28","messageId":"29","endLine":164,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":167,"column":17,"nodeType":"32","messageId":"33","endLine":167,"endColumn":19},"no-unused-vars","'show' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]